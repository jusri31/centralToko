/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.SCI.centraltoko.gui.master;

import com.SCI.centraltoko.Main;
import com.SCI.centraltoko.model.MarialStstus;
import com.SCI.centraltoko.model.Person;
import com.SCI.centraltoko.utility.UtilityTools;
import com.twmacinta.util.MD5;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import org.slf4j.LoggerFactory;



/**
 *
 * @author yuzri
 */
public class FrmPerson extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmPerson
     */
    
    private JFileChooser choser;
    private ImageIcon image;
    private final int maxPicture=128;
    private List<Person> persons;
    private Person person;
    private static final org.slf4j.Logger log= LoggerFactory.getLogger(FrmPerson.class.getName());
  
    public FrmPerson() {     
        
        initComponents();
       
        tbl_person.setAutoCreateColumnsFromModel(false);
       refreshTabel();
        tbl_person.getSelectionModel().addListSelectionListener(new TabelListener());
        
        cmbStatus.setModel(new DefaultComboBoxModel(MarialStstus.values()));
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnTambah = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_person = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        cmbStatus = new javax.swing.JComboBox();
        txtFoto = new javax.swing.JTextField();
        lblFoto = new javax.swing.JLabel();
        btnCari = new javax.swing.JButton();
        txtTGL = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Form Person");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Create.png"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.setFocusable(false);
        btnTambah.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTambah.setMargin(new java.awt.Insets(0, 2, 0, 2));
        btnTambah.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        jToolBar1.add(btnTambah);

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Save.png"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setEnabled(false);
        btnSimpan.setFocusable(false);
        btnSimpan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSimpan.setMargin(new java.awt.Insets(0, 2, 0, 2));
        btnSimpan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSimpan);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Edit page.png"))); // NOI18N
        btnEdit.setText("  Edit  ");
        btnEdit.setEnabled(false);
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setMargin(new java.awt.Insets(0, 4, 0, 4));
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEdit);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Delete.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setEnabled(false);
        btnHapus.setFocusable(false);
        btnHapus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHapus.setMargin(new java.awt.Insets(0, 4, 0, 4));
        btnHapus.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jToolBar1.add(btnHapus);

        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Cancel.png"))); // NOI18N
        btnBatal.setText("Batal");
        btnBatal.setFocusable(false);
        btnBatal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBatal.setMargin(new java.awt.Insets(0, 4, 0, 4));
        btnBatal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBatal);

        btnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/SCI/centraltoko/icon/toolbar/Back.png"))); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.setFocusable(false);
        btnKeluar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKeluar.setMargin(new java.awt.Insets(0, 4, 0, 0));
        btnKeluar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKeluar);

        jLabel1.setText("Cari");

        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });

        tbl_person.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama", "TGL_Lahir"
            }
        ));
        jScrollPane1.setViewportView(tbl_person);

        jLabel2.setText("ID");

        txtId.setEnabled(false);

        jLabel3.setText("Nama");

        jLabel4.setText("Password");

        jLabel5.setText("Alamat");

        jLabel6.setText("Tgl Lahir");

        jLabel7.setText("Status Perkawinan");

        jLabel8.setText("Foto");

        txtNama.setEnabled(false);

        txtPass.setEnabled(false);

        txtAlamat.setColumns(20);
        txtAlamat.setRows(5);
        txtAlamat.setEnabled(false);
        jScrollPane2.setViewportView(txtAlamat);

        cmbStatus.setEnabled(false);

        txtFoto.setEnabled(false);
        txtFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFotoActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.setEnabled(false);
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(124, 124, 124)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCari))
                            .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTGL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 155, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addComponent(txtPass))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(txtTGL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCari))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // Simpan Data Person
     if(validasiForm()){   
        if(person==null){
            person=new Person();
       }
        loadDataForm();
        try{
            Main.getMasterService().simpan(person);
            bersih();
            enableForm(false);
            btnTambah.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSimpan.setEnabled(false);
            refreshTabel();
        }catch(Exception ex){
//            Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE, title, ex);
            log.equals(ex);
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data Person", "ERROR", JOptionPane.ERROR_MESSAGE, getFrameIcon());
        }
     }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFotoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFotoActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        Main.getFrame().frmPerson=null;
    }//GEN-LAST:event_formInternalFrameClosed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        if(choser==null){
            choser=new JFileChooser(System.getProperty("user.home"));
            choser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            choser.setFileFilter(new FileNameExtensionFilter("jpg | png | gif", "jpg","png","gif"));
        }
        int ret=choser.showOpenDialog(this);
        if(ret==JFileChooser.APPROVE_OPTION){
            File f=choser.getSelectedFile();  
            try {
                Image img=ImageIO.read(new FileInputStream(f));
//                cek Ukuran foto
                if(img.getHeight(this)>maxPicture || img.getWidth(this)>maxPicture){
                    if(img.getHeight(this)>img.getWidth(this)){
                        float scale=img.getHeight(this)/maxPicture;
                        int widthSize= (int)(img.getWidth(this)/scale);
                        img=img.getScaledInstance(maxPicture,widthSize , Image.SCALE_SMOOTH);
                    }else{
                        float scale=img.getWidth(this)/maxPicture;
                        int heigtSize=(int)(img.getWidth(this)/scale);
                        img=img.getScaledInstance(maxPicture, heigtSize, Image.SCALE_SMOOTH);
                    }
                }
                image=new ImageIcon(img);
                lblFoto.setIcon(image);
                txtFoto.setText(f.getAbsolutePath());
                
            } catch (IOException ex) {
//                Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE,null, ex);
                log.equals(ex);
                
        }
       
            
        }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if(person !=null){
            
                int hapus=JOptionPane.showConfirmDialog(this,"Anda yakin hapus data","Hapus Data", JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE, getFrameIcon());
               if(hapus==0){
                   try{
                    Main.getMasterService().hapus(person);
                    bersih();
                    refreshTabel();
                    btnTambah.setEnabled(true);
                    btnEdit.setEnabled(false);
                    btnHapus.setEnabled(false);
               }catch(Exception e){
                log.error("gagal hapus data", e);
                JOptionPane.showMessageDialog(this, "Gagal menghapus data ","ERROR", JOptionPane.ERROR_MESSAGE, getFrameIcon());
               
                
            }
            }
        }
        
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        bersih();
        enableForm(false);
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        btnSimpan.setEnabled(false);
        btnTambah.setEnabled(true);
        
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        enableForm(true);
        btnSimpan.setEnabled(true);
        btnTambah.setEnabled(false);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        enableForm(true);
        btnSimpan.setEnabled(true);
        btnEdit.setEnabled(false);
        btnHapus.setEnabled(false);
        btnCari.setEnabled(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        for(int i=0;i<tbl_person.getRowCount();i++){
            if(tbl_person.getValueAt(i, 0).toString().startsWith(txtCari.getText())){
//                Selec baris yang ditemukan
                tbl_person.getSelectionModel().setSelectionInterval(i, i);
//                Scroll pilihan selekci
                UtilityTools.scroolTorect(tbl_person, i);
                break;
            }
        }
    }//GEN-LAST:event_txtCariKeyReleased

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        Main.getFrame().frmPerson=null;
        this.dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed
    
//    Membuat Tabel model
    private class TbelPerson extends AbstractTableModel{
        
       
        @SuppressWarnings("FieldMayBeFinal")
        private List<Person> listPerson;
        public TbelPerson(List<Person>listPerson){
            this.listPerson=listPerson;
        }
        
        @Override
        public int getRowCount() {
            return listPerson.size();
        }

        @Override
        public int getColumnCount() {
            return 2;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Person p=listPerson.get(rowIndex);
            switch(columnIndex){
                case 0 : 
                    return p.getNama();
                case 1 : 
                    return p.getBirthDate();
                default :
                    return null;
            }
        }
        
    }
    
//    Membuat Listener untuk merospon tabel agar interaktive
    private class TabelListener implements ListSelectionListener{

        @Override
        public void valueChanged(ListSelectionEvent e) {
            if(tbl_person.getSelectedRow()>=0){
                person=persons.get(tbl_person.getSelectedRow());
                person=Main.getMasterService().getIdPerson(person.getId());
                loadFromModel();
                
            }
        }
        
    }
    
//    Method untuk merefresh data tabel
    private void refreshTabel(){
        persons=Main.getMasterService().semuaPerson();
        tbl_person.setModel(new TbelPerson(persons));
        
    }
     
// Membual Method untuk mwload data person dari objek ke form
    private void loadFromModel(){
        txtId.setText(String.valueOf(person.getId()));
        txtNama.setText(person.getNama());
        txtPass.setText(person.getPassword());
        txtAlamat.setText(person.getAlamat());
        txtTGL.setDate(person.getBirthDate());
        cmbStatus.setSelectedItem(person.getStatus());
        btnTambah.setEnabled(false);
        btnSimpan.setEnabled(false);
        btnEdit.setEnabled(true);
        btnHapus.setEnabled(true);
        if(person.getPicture()!=null){
            try{
            ObjectInputStream objectInput=new ObjectInputStream(new ByteArrayInputStream(person.getPicture()));
            image=(ImageIcon)objectInput.readObject();
            lblFoto.setIcon(image);
            }catch(ClassNotFoundException ex){
//                Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE,null, ex);
                log.error("Gagal membaca file byte dari database", ex);
            }catch(IOException ex){
//               Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE,null, ex);
                log.error("Gagal menapilkan file", ex);
            }
        }else{
            lblFoto.setIcon(null);
        }
        
    }
//    Method meload dari form kemodel
    @SuppressWarnings({"RedundantStringConstructorCall", "null"})
    private void loadDataForm(){
        person.setNama(txtNama.getText());
        if(person.getPassword()==null || !person.getPassword().equals(new String(txtPass.getText()))){
//            encrypt kata sandi
            @SuppressWarnings("RedundantStringConstructorCall")
            String kataSandi=new MD5(new String(txtPass.getText())).asHex();
            person.setPassword(kataSandi);
        }
        person.setAlamat(txtAlamat.getText());
        person.setBirthDate(txtTGL.getDate());
        person.setStatus((MarialStstus)cmbStatus.getSelectedItem());
        
        ObjectOutputStream dataObjectOutput=null;
        try{
            ByteArrayOutputStream objectOutput=new ByteArrayOutputStream();
            dataObjectOutput=new ObjectOutputStream(objectOutput);
            dataObjectOutput.writeObject(image);
            dataObjectOutput.flush();
            person.setPicture(objectOutput.toByteArray());
            
        }catch(IOException ex){
//            Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE,null, ex);
            log.error("gagal merubah object image ke array", ex);
        }finally{
            try{
                dataObjectOutput.close();
            }catch(IOException ex){
//                Logger.getLogger(FrmPerson.class.getName()).log(Level.SEVERE,null, ex);
                log.error("Gagal", ex);
            }
        }
    }
//    Bersihkan form
    private void bersih(){
        txtId.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtPass.setText("");
        txtTGL.setDate(null);
        txtFoto.setText("");
        lblFoto.setIcon(null);
        person=null;
        tbl_person.getSelectionModel().clearSelection();
    }
//    enable form
    private void enableForm(boolean status){
        txtNama.setEnabled(status);
        txtAlamat.setEnabled(status);
        txtPass.setEnabled(status);
        txtFoto.setEnabled(false);
        txtTGL.setEnabled(status);
        cmbStatus.setEnabled(status);
        btnCari.setEnabled(status);
    }
//    validasi form
    private boolean validasiForm(){
        if(txtNama.getText().length()>0 && txtPass.getPassword()!=null && txtPass.getPassword().length>0){
            return true;
        }else{
            JOptionPane.showMessageDialog(Main.getFrame(), "Lengkapi isian dat","ERROR",JOptionPane.ERROR_MESSAGE,getFrameIcon());
            return false;
        }
                
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTable tbl_person;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtFoto;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNama;
    private javax.swing.JPasswordField txtPass;
    private com.toedter.calendar.JDateChooser txtTGL;
    // End of variables declaration//GEN-END:variables
}
